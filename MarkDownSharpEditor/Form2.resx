<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADaGlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS4wLWMwNjEgNjQuMTQwOTQ5LCAyMDEwLzEyLzA3LTEwOjU3OjAxICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNv
        bS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlw
        ZS9SZXNvdXJjZVJlZiMiIHhtbG5zOnhtcD0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wLyIgeG1w
        TU06T3JpZ2luYWxEb2N1bWVudElEPSJ4bXAuZGlkOjAxODAxMTc0MDcyMDY4MTE4NzFGRkVEM0Y1MDg0
        RTA4IiB4bXBNTTpEb2N1bWVudElEPSJ4bXAuZGlkOkJEODRGREM3RTZBQTExRTE4QUUwRjM1Mzk4NUQw
        MUMzIiB4bXBNTTpJbnN0YW5jZUlEPSJ4bXAuaWlkOkJEODRGREM2RTZBQTExRTE4QUUwRjM1Mzk4NUQw
        MUMzIiB4bXA6Q3JlYXRvclRvb2w9IkFkb2JlIFBob3Rvc2hvcCBDUzUuMSBNYWNpbnRvc2giPiA8eG1w
        TU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDo0QjRGOTlEODA4MjA2ODExOTdB
        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
        SUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADKyssY2trbMNXV1jHe3t8vs7O0CgAABALe3t8n1dXWMdXV1jHb29wqAAAEAp+foQje3t8v1dXWMdra
        2zDT09Qd+/v70fPz9Nby8vLW8vLy1v39/c7n5+eC9PT01PHx8dbx8fHW9PT01ejo6IT+/v7N8vLy1vPz
        89b19fXW+/v70ujn6OSxsbL/pqan/6mpqv/S0tPu7Ozt3K6vsP6ioqT/n5+h/6Wlp//n5+ff0tLS65aW
        mf+RkZT/pKSn//Pz89ni4uKzw8PD97Sztf+4uLj/vb2//szLzfi7u7z/uLi5/7S0tP+wsLD/v7/B+LKy
        s/2hoaL/kpKV/66usfny8vKv2NjZZt3d3ujExMb/z8/P/9PT0//U1NT/1dXW/9XV1v/S0tL/zMzM/8jI
        yP/CwsP/srKz/5uanf/R0dPq39/gZrOztB309PTXxsbI/9jY2P/i4uL/4+Pj/+Li4//Kysv/mJiY/8TE
        xf+VlZX/zs7O/7KztP+cnJ7/7u7u2r+/wCA5OTwD9vX2vMzLzPvc3Nz/5ubm/+np6f/o6Oj/5ubn/4KC
        gv/h4eH/gICA/9DQ0P+wsLL/qamq/PLy8r8AAAQCvb2+Ae/v76LU1NT33d3d/+rq6v/s7Oz/7Ozs/7i4
        uf9ycnL/p6en/3Fxcf+bm5z/oKCg/7a2uPjs7OykAAAAAAAAAADt7e2b1tbX9t/f4P/s7Oz/7+/v/+7u
        7v/r7Oz/srKy/7Ozs/+wsLD/paWl/6+vsf+7u7326+vrnQAAAAAAAAAA7e3tndbW1/bg4OD/7u7u//Dw
        8P/v7+//7Ozs/9jY2P+Ojo7/1tbW/4SEhP+vr7H/u7u99urq6p4AAAAAycnJAfHx8anT09T44N/g/+zs
        7P/v7+//7e3t/+Hh4f+urq7/cXFy/6mpqf9sbGz/jIyM/7Cwsfjt7e2pAAAAAL6+vwH29va4zc3O+9zc
        3P/n5+f/6Ojo/+Tl5f/i4uP/39/g/pSUlP/CwsL/jo6P/56en/+vrrH78fHyuwAAAACsrK0F/Pz80sbG
        x/7S0tL/2NjZ/9jY2P/W1tf/3t7f893d3fGpqar/mZmZ/6KipP+Dg4T/pqao//j4+NSAgIIE29vcDvv7
        +8/U1NXr09PT69PT0+vR0dLr09PU6fr6+s/8/PzO0dHS6sPDxO3Q0NDrwsLC7tjY2ev7+/vQ5OTkEwAA
        BAHX19gt7OzshOjo6Ibo6OiG6Ojohuvr64DOzs8qy8vMJ+vr633o6OiG6Ojohujo6Ibs7OyE09PULgAA
        BAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAB//+AAf//gAH//wAB//8AAf//AAD//wAA
        //8AAP///////w==
</value>
  </data>
</root>